# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is usually recommended to include the gitignore file for the project.
.idea/

# VS Code
.vscode/

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~

# Project-specific files and directories

# Generated data files
data/combined_fairness_metrics.parquet
data/model_results.pkl
data/preprocessed_data.pkl

# Log files
logs/
*.log
dashboard.log
fairness_metrics.log
model_training.log

# Model artifacts
*.pkl
*.joblib
*.h5
*.pb
*.onnx

# Report outputs
reports/*.html
reports/*.pdf
reports/*.png
reports/*.jpg
reports/*.svg

# Temporary files
temp/
tmp/
.temp/
.tmp/

# Benchmark results
.benchmarks/
benchmark_results/

# Configuration overrides (keep template configs)
config/local_config.py
config/production_config.py
.env.local
.env.production

# IDE and editor files
*.swp
*.swo
*~
.project
.pydevproject

# OS generated files
Icon?
.directory
.Trash-*

# Backup files
*.bak
*.backup
*.old

# Compressed files
*.zip
*.tar.gz
*.rar
*.7z

# Database files
*.db
*.sqlite
*.sqlite3

# Jupyter notebook outputs (optional - uncomment if you want to exclude outputs)
# *.ipynb

# Large dataset files (uncomment if you have large datasets to exclude)
# data/large_dataset.csv
# data/*.parquet

# Virtual environment variations
pyvenv.cfg
Scripts/
Include/
Lib/

# Poetry
poetry.lock

# Conda
environment.yml.lock

# Docker
.dockerignore
Dockerfile.dev

# Kubernetes
k8s/
*.yaml.local

# Terraform
*.tfstate
*.tfstate.*
.terraform/

# AWS
.aws/

# Azure
.azure/

# Google Cloud
.gcloud/

# Node.js (if any frontend components)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Coverage reports
.coverage
coverage.xml
htmlcov/

# Profiling
*.prof
*.lprof

# Memory profiling
*.mprof

# Performance benchmarks
.benchmark/ 